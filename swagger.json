{
  "openapi": "3.0.3",
  "info": {
    "title": "Products API",
    "version": "1.0.0",
    "description": "A RESTful API to manage products. To request access, email api-support@example.com with your intended use case."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/products"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Operations related to products"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Use 'ApiKey {your-key}' format"
      }
    },
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Product 1"
          },
          "category": {
            "type": "string",
            "example": "Books"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 37.55
          },
          "stockQuantity": {
            "type": "integer",
            "example": 21
          },
          "brand": {
            "type": "string",
            "example": "BrandG"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2024-12-12T04:21:45Z"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        },
        "required": ["name", "category", "price", "stockQuantity", "brand"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Error"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Products"],
        "summary": "Update a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "patch": {
        "tags": ["Products"],
        "summary": "Partially update a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Any subset of Product fields"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product partially updated"
          },
          "400": {
            "description": "Invalid data"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  }
}